float _angle1 = 10.5;
System::Single _angle2 = 11.7;

public int test = 5;
private string _test2 = "sdfasdfasdfsdf";
bool _noInitialization;

int a = 30;

/*
event void _update()
{
    // GetComponent<ComponentType> would be intrinsic global function returning hidden global immutable cached variable with initial value of "this" and type "ComponentType"
    // ComponentType could only be in list of known types supporting "this" initial value (like UdonBehaviour, Unity3d components, etc)
    // Type a = new Type(params) would be syntax sugar around static call Type a = Type.ctor(params)
    // Type a = new const Type(const_params) would be special initialization syntax for types supporting this (Const_ graph nodes). Maby i won't be implementing this

    UnityEngineTransform thisTransform = GetComponent<UnityEngineTransform>();    

    thisTransform.Rotate(
        new UnityEngineVector3((float)0, (float)1, (float)0),
        _angle
    );
}
*/

event void OnRenderImage(UnityEngine::RenderTexture src, UnityEngine::RenderTexture dest)
{
    bool isCool = (a + 1).ToString("X")[0] == 5;
    /*
        var temp1 = a;                            // id -> reference "a" variable и вернуть значение этой переменной (т.к. переменная уже создана на этот момент)
        var temp2 = 1;                            // literal - get or create variable for int literal = 1  и вернуть значение этой переменной литерала
        var temp3 = temp1 + temp2;                // call static temp1Type.operator_+(temp1, temp2)   и вернуть значение, которое вернулось из метода (может быть void)
        var temp4 = (temp3);                      // ничего не делать, возвратить значение переменной переданной в скобках.
        var temp5 = "X";                          // литерал - аналогично
        var temp6 = temp4.ToString(temp5);        // call instance temp4Type.ToString(temp4, temp5) - возвращаем результат
        var temp7 = 0;                            // литерал - аналогично
        var temp8 = temp6[temp7];                 // call static temp6Type.operator_[](temp6, temp7)  - возвращаем результат
        var temp9 = 5;                            // литерал
        var temp10 = temp8 == temp9;              // call static temp8Type.operator_==(temp8, temp9)  - возвращаем результат
    */

    int teeee = (VRCSDK3Components::VRCMirrorReflection)something;

    int trololo = Something.ResolveLaterMethod(5, 6);
    int sdfsdf = UnityEngine::Vector3.ExplicitStaticMethod(5, 6);
    int ololo = teee.test.InstanceMethod(5, 6);
}